% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tweet_features.R
\name{create_tweet_features}
\alias{create_tweet_features}
\title{Create tweet features}
\usage{
create_tweet_features(x, .req.columns.mapping = required.tweets.df.cols, ...)
}
\arguments{
\item{.req.columns.mapping}{a two-column \code{data.frame} mapping column names to
(character vectors specifying) expected column classes.
The first column must be named \code{colname} and have type character.
The second column must be a list-column of character vectors and named \code{accepted_classes}.
(see \code{?\link{required.tweets.df.cols}}).}

\item{...}{Additional arguments passed to \code{\link{compute_tweet_features}}.}

\item{a}{\code{data.frame} \code{\link[data.table]{data.table}}, or \code{\link[tibble]{tibble}}
recording tweets.
For required column (naming and typing conventions) refer to \code{?\link{required.tweets.df.cols}}.
For an example see \code{?\link{tweets.df.prototype}}.}
}
\value{
A \code{\link[data.table]{data.table}}.
     If, in addition, you pass the parameter-argument mapping \code{.as.data.table = FALSE}
     (e.g. \code{create_tweet_features(df, .as.data.table = FALSE)}),
      the return object is a \code{\link[tibble]{tibble}} instead.
}
\description{
Given a data frame of tweets data, \code{create_tweet_features()} creates tweet features.
}
\note{
Names and types/classes of \code{x} are expected to match the values mapped in
    \code{\link{required.tweets.df.cols}} (for an example, see \code{\link{tweets.df.prototype}}).
    An error will be raised if
     (a) any required column is missing (column name-based check),
     or (b) any the class of any required column does not match any of the accepted classes.
}
\section{Complementary with the \code{rtweet} package}{

    The column naming and typing conventions (see \code{\link{required.tweets.df.cols}})
     conform with the data returned by \code{rtweet} functions
     \code{\link[rtweet]{lookup_statuses}} and \code{\link[rtweet]{lookup_tweets}}
     if called with \code{parse = TRUE} (the default behavior).
}

